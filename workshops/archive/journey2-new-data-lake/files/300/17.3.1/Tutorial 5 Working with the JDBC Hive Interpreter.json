{"paragraphs":[{"text":"%md\n# Demonstration: Citi Bike New York- Working with the JDBC(Hive) Interpeter\n\nThis tutorial was built for BDCS-CE version 17.3.1. If you are using a later version of BDCS-CE, there may be a newer version of this tutorial notebook at <https://github.com/oracle/learning-library/tree/master/workshops/journey2-new-data-lake> . Questions and feedback about the tutorial: david.bayard@oracle.com\n\nBe sure to run the previous Tutorial: \"Hive Table Setup\"\n\nThis tutorial will illustrate a few commands run in the JDBC(Hive) interpreter within a Notebook.\n\n## Contents\n+ About the JDBC(Hive) Interpreter \n+ Running simple queries (show databases, show tables)\n+ Query a simple Hive table and graph the results\n+ Next Steps\n\nAs a reminder, the documentation for BDCS-CE can be found here: <http://docs.oracle.com/cloud/latest/big-data-compute-cloud/index.html>","user":"anonymous","dateUpdated":"2017-07-28T13:07:55+0000","config":{"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Demonstration: Citi Bike New York- Working with the JDBC(Hive) Interpeter</h1>\n<p>This tutorial was built for BDCS-CE version 17.3.1. If you are using a later version of BDCS-CE, there may be a newer version of this tutorial notebook at <a href=\"https://github.com/oracle/learning-library/tree/master/workshops/journey2-new-data-lake\">https://github.com/oracle/learning-library/tree/master/workshops/journey2-new-data-lake</a> . Questions and feedback about the tutorial: <a href=\"mailto:&#x64;&#x61;&#118;&#105;d&#x2e;&#x62;a&#121;&#x61;&#x72;&#100;&#64;&#111;&#114;&#97;&#x63;&#x6c;&#101;&#46;&#99;&#111;&#x6d;\">&#x64;&#x61;&#118;&#105;d&#x2e;&#x62;a&#121;&#x61;&#x72;&#100;&#64;&#111;&#114;&#97;&#x63;&#x6c;&#101;&#46;&#99;&#111;&#x6d;</a></p>\n<p>Be sure to run the previous Tutorial: &ldquo;Hive Table Setup&rdquo;</p>\n<p>This tutorial will illustrate a few commands run in the JDBC(Hive) interpreter within a Notebook.</p>\n<h2>Contents</h2>\n<ul>\n  <li>About the JDBC(Hive) Interpreter</li>\n  <li>Running simple queries (show databases, show tables)</li>\n  <li>Query a simple Hive table and graph the results</li>\n  <li>Next Steps</li>\n</ul>\n<p>As a reminder, the documentation for BDCS-CE can be found here: <a href=\"http://docs.oracle.com/cloud/latest/big-data-compute-cloud/index.html\">http://docs.oracle.com/cloud/latest/big-data-compute-cloud/index.html</a></p>\n</div>"}]},"apps":[],"jobName":"paragraph_1501202865140_-1859632674","id":"20170316-112936_805072906","dateCreated":"2017-07-28T00:47:45+0000","dateStarted":"2017-07-28T13:07:55+0000","dateFinished":"2017-07-28T13:07:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:376"},{"text":"%md\n\n## Overview\nThe Apache Hive data warehouse software facilitates querying and managing large datasets residing in distributed storage. Hive provides a mechanism to project structure onto this data and query the data using a SQL-like language called HiveQL. \n\n## How to use\nBasically, the JDBC(Hive) interpreter allows you to run a single HiveQL statement per paragraph and view the output in a variety of user-selectable formats:\n\n    %jdbc(hive)\n    select * from my_table;\n    \n","user":"anonymous","dateUpdated":"2017-07-28T13:08:18+0000","config":{"tableHide":false,"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true},"settings":{"params":{"prefix":""},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h2>Overview</h2>\n<p>The Apache Hive data warehouse software facilitates querying and managing large datasets residing in distributed storage. Hive provides a mechanism to project structure onto this data and query the data using a SQL-like language called HiveQL. </p>\n<h2>How to use</h2>\n<p>Basically, the JDBC(Hive) interpreter allows you to run a single HiveQL statement per paragraph and view the output in a variety of user-selectable formats:</p>\n<pre><code>%jdbc(hive)\nselect * from my_table;\n</code></pre>\n</div>"}]},"apps":[],"jobName":"paragraph_1501202865141_-1860017423","id":"20170510-144430_1423420881","dateCreated":"2017-07-28T00:47:45+0000","dateStarted":"2017-07-28T13:08:18+0000","dateFinished":"2017-07-28T13:08:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:377"},{"text":"%jdbc(hive)\nshow databases","dateUpdated":"2017-07-28T13:08:27+0000","config":{"colWidth":6,"editorMode":"ace/mode/text","results":[{"graph":{"mode":"table","height":278,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865141_-1860017423","id":"20170316-085415_1154867859","dateCreated":"2017-07-28T00:47:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:378","user":"anonymous","dateFinished":"2017-07-28T13:08:34+0000","dateStarted":"2017-07-28T13:08:27+0000"},{"text":"%jdbc(hive)\nshow tables","dateUpdated":"2017-07-28T13:08:38+0000","config":{"colWidth":6,"editorMode":"ace/mode/text","results":[{"graph":{"mode":"table","height":283,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865142_-1858863176","id":"20170316-085428_14027211","dateCreated":"2017-07-28T00:47:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:379","user":"anonymous","dateFinished":"2017-07-28T13:08:38+0000","dateStarted":"2017-07-28T13:08:38+0000"},{"text":"%jdbc(hive)\ndescribe bike_trips","dateUpdated":"2017-07-28T13:08:42+0000","config":{"colWidth":6,"editorMode":"ace/mode/text","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[{"name":"col_name","index":0,"aggr":"sum"}],"values":[{"name":"data_type","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"col_name","index":0,"aggr":"sum"},"yAxis":{"name":"data_type","index":1,"aggr":"sum"}}}}],"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865142_-1858863176","id":"20170316-112903_182379485","dateCreated":"2017-07-28T00:47:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:380","user":"anonymous","dateFinished":"2017-07-28T13:08:42+0000","dateStarted":"2017-07-28T13:08:42+0000"},{"text":"%jdbc(hive)\nshow create table bike_trips","dateUpdated":"2017-07-28T13:08:46+0000","config":{"colWidth":6,"editorMode":"ace/mode/text","results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"editorSetting":{"language":"text","editOnDblClick":false}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865142_-1858863176","id":"20170316-113150_898389403","dateCreated":"2017-07-28T00:47:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:381","user":"anonymous","dateFinished":"2017-07-28T13:08:46+0000","dateStarted":"2017-07-28T13:08:46+0000"},{"title":"Query to show Data as a Pie Chart (Riders by Gender)","text":"%jdbc(hive)\n\nselect \n case when a.gender=1 then 'Male' when a.gender=2 then 'Female' else 'Unknown' end gender,  a.trip_count \nfrom (select gender, count(*) trip_count from bike_trips\ngroup by gender) a","dateUpdated":"2017-07-28T13:08:53+0000","config":{"tableHide":false,"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":[{"graph":{"mode":"pieChart","height":300,"optionOpen":false,"keys":[{"name":"gender","index":0,"aggr":"sum"}],"values":[{"name":"a.trip_count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"gender","index":0,"aggr":"sum"},"yAxis":{"name":"a.trip_count","index":1,"aggr":"sum"}}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865142_-1858863176","id":"20170512-093652_676338818","dateCreated":"2017-07-28T00:47:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:382","user":"anonymous","dateFinished":"2017-07-28T13:09:20+0000","dateStarted":"2017-07-28T13:08:53+0000"},{"title":"Query to Show a Chart with Stacks or Groupings (Riders by Gender by Day)","text":"%jdbc(hive)\n\nselect gender, dayofweek, count(*)\nfrom (    select date_format(`StartTime`,\"E\") dayofweek,\n          case when gender=1 then 'Male' when gender=2 then 'Female' else 'Unknown' end gender \nfrom bike_trips) bike_times \ngroup by gender, dayofweek","dateUpdated":"2017-07-28T00:47:45+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":[{"graph":{"mode":"multiBarChart","height":212,"optionOpen":false,"keys":[{"name":"dayofweek","index":1,"aggr":"sum"}],"values":[{"name":"_c2","index":2,"aggr":"sum"}],"groups":[{"name":"gender","index":0,"aggr":"sum"}],"scatter":{"xAxis":{"name":"gender","index":0,"aggr":"sum"},"yAxis":{"name":"dayofweek","index":1,"aggr":"sum"}}}}],"enabled":true},"settings":{"params":{"gender":"Male"},"forms":{}},"apps":[],"jobName":"paragraph_1501202865143_-1859247925","id":"20170316-112828_546269030","dateCreated":"2017-07-28T00:47:45+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:383"},{"title":"Hive Query to Show a Chart (Age Distribution)","text":"%jdbc(hive)\n\nselect (2016 - a.birthyear) age, count(*) number_trips from bike_trips as a\nwhere birthyear is not null\ngroup by birthyear\n","dateUpdated":"2017-07-28T00:47:45+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":[{"graph":{"mode":"multiBarChart","height":300,"optionOpen":false,"keys":[{"name":"age","index":0,"aggr":"sum"}],"values":[{"name":"number_trips","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"age","index":0,"aggr":"sum"},"yAxis":{"name":"number_trips","index":1,"aggr":"sum"}}}}],"enabled":true},"settings":{"params":{"gender":"Female"},"forms":{}},"apps":[],"jobName":"paragraph_1501202865143_-1859247925","id":"20170316-160730_780267392","dateCreated":"2017-07-28T00:47:45+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:384"},{"title":"Query to  Trip Durations","text":"%jdbc(hive)\n\nselect trip_duration,  a.trip_count \nfrom (select tripduration  as trip_duration, count(*) trip_count from bike_trips\ngroup by tripduration) a\n","dateUpdated":"2017-07-28T00:47:45+0000","config":{"editorSetting":{"language":"text","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/text","title":true,"results":[{"graph":{"mode":"lineChart","height":300,"optionOpen":false,"keys":[{"name":"trip_duration","index":0,"aggr":"sum"}],"values":[{"name":"a.trip_count","index":1,"aggr":"sum"}],"groups":[],"scatter":{"xAxis":{"name":"trip_duration","index":0,"aggr":"sum"},"yAxis":{"name":"a.trip_count","index":1,"aggr":"sum"}}}}],"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865143_-1859247925","id":"20170316-085448_355044922","dateCreated":"2017-07-28T00:47:45+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:385"},{"text":"%md\n# Next Steps\n\nSo far, we\n\n1) have downloaded a Citi Bike data zip and created csv files. Then we stored the data into the Object Storage. \n2) set up a Hive table using the Hive command line\n3) queried Hive via Zepellin's JDBC(Hive) Interpreter\n\nIn the next Demo we use Spark for processing and query. \n","user":"anonymous","dateUpdated":"2017-07-28T00:49:36+0000","config":{"editorSetting":{"editOnDblClick":"true","language":"markdown"},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Next Steps</h1>\n<p>So far, we</p>\n<p>1) have downloaded a Citi Bike data zip and created csv files. Then we stored the data into the Object Storage.<br/>2) set up a Hive table using the Hive command line<br/>3) queried Hive via Zepellin&rsquo;s JDBC(Hive) Interpreter</p>\n<p>In the next Demo we use Spark for processing and query.</p>\n</div>"}]},"apps":[],"jobName":"paragraph_1501202865143_-1859247925","id":"20170424-124511_581308949","dateCreated":"2017-07-28T00:47:45+0000","dateStarted":"2017-07-28T00:49:36+0000","dateFinished":"2017-07-28T00:49:36+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:386"},{"dateUpdated":"2017-07-28T13:09:19+0000","config":{"editorSetting":{"language":"markdown","editOnDblClick":"true"},"colWidth":12,"editorMode":"ace/mode/markdown","results":{},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501202865144_-1861171669","id":"20170512-135039_1163275536","dateCreated":"2017-07-28T00:47:45+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:387","text":"%md\n### Change Log\nJuly 28, 2017 - Confirmed that it works with 17.3.1-20","user":"anonymous","dateFinished":"2017-07-28T13:09:19+0000","dateStarted":"2017-07-28T13:09:19+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h3>Change Log</h3>\n<p>July 28, 2017 - Confirmed that it works with 17.3.1-20</p>\n</div>"}]}},{"text":"%md\n","user":"anonymous","dateUpdated":"2017-07-28T13:09:19+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":"true"},"editorMode":"ace/mode/markdown"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1501247359821_-475282135","id":"20170728-130919_1415421726","dateCreated":"2017-07-28T13:09:19+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1496"}],"name":"Tutorial 5 Working with the JDBC Hive Interpreter","id":"2CP1GRYUN","angularObjects":{"2CQVFQFWU:shared_process":[],"2CRFREMNU:shared_process":[],"2CPRZVQKR:shared_process":[],"2CQWU46XZ:shared_process":[],"2CPKCF4R9:shared_process":[],"2CR7Y2CFK:shared_process":[],"2CQQM64RT:shared_process":[],"2CQX3UW3S:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}